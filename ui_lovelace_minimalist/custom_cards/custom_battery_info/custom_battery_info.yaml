---
custom_battery_info:
  variables:
    - ulm_battery_entity:
  styles:
    custom_fields:
      info:
        - position: "absolute"
        - left: "10px"
        - top: "40px"
        - width: "20px"
        - height: "20px"
        - z-index: "999"
        - background: "white"
        - border-radius: "25px"
        - color: "black"

  custom_fields:
    info: |
      [[[
          if (variables.ulm_battery_entity){
            const battery = Math.round((states[variables.ulm_battery_entity].state)/1);
            const radius = 20.5; const circumference = radius * 2 * Math.PI;
            return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}"
            stroke="green" stroke-width="3" fill="none"
            style="transform: rotate(-90deg); transform-origin: 50% 50%;
            stroke-dasharray: ${circumference};
            stroke-dashoffset: ${circumference - battery / 100 * circumference};" />
            <text x="50%" y="54%" fill="#212121" font-size="16" font-weight= "bold"
            text-anchor="middle" alignment-baseline="middle">
            ${battery}<tspan font-size="10">%</tspan></text></svg>`;}
          else{
            const battery = Math.round((entity.attributes.battery || entity.attributes.battery_level)/1);
            const radius = 20.5; const circumference = radius * 2 * Math.PI;
            return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}"
            stroke="green" stroke-width="3" fill="none"
            style="transform: rotate(-90deg); transform-origin: 50% 50%;
            stroke-dasharray: ${circumference};
            stroke-dashoffset: ${circumference - battery / 100 * circumference};" />
            <text x="50%" y="54%" fill="#212121" font-size="16" font-weight= "bold"
            text-anchor="middle" alignment-baseline="middle">
            ${battery}<tspan font-size="10">%</tspan></text></svg>`;}
      ]]]
