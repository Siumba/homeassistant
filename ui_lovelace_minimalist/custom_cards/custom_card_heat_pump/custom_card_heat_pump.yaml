custom_card_heat_pump:
  variables:
    name: null
  show_name: false
  show_icon: false
  template:
    - "icon_info_bg"
    - "ulm_language_variables"
    - "custom_card_heat_pump_language_variables"
  styles:
    custom_fields:
      item2:
        - display: >-
            [[[
                if (entity.state == 'off'){
                  return "none"
                } else {
                  return "block"
                }
            ]]]
      item3:
        - display: >-
            [[[
                if (entity.state == 'off'){
                  return "none"
                } else {
                  return "block"
                }
            ]]]
      item4:
        - display: >-
            [[[
                if (entity.state == 'off'){
                  return "none"
                } else {
                  return "block"
                }
            ]]]
      item5:
        - display: >-
            [[[
                if (entity.state == 'off'){
                  return "none"
                } else {
                  return "block"
                }
            ]]]
    grid:
      - grid-template-areas: >-
          [[[
              if (entity.state == 'off'){
                return "'item1'"
              } else {
                return "'item1' 'item2' 'item3' 'item4' 'item5'"
              }
          ]]]
      - grid-template-columns: "1fr"
      - grid-template-rows: >-
          [[[
              if (entity.state == 'off'){
                return "min-content"
              } else {
                return "min-content min-content min-content min-content min-content"
              }
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    tap_action:
      action: none

  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template:
          - "icon_more_info"
          - "ulm_language_variables"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: >
                [[[
                  var icon = "mdi:air-conditioner";
                  var state = entity.state;
                  if (state =='dry') {
                    return "mdi:water";
                  } else if (state =='heat') {
                    return "mdi:fire";
                  } else if (state =='cool') {
                    return "mdi:snowflake";
                  } else if (state =='fan_only') {
                    return "mdi:fan";
                  } else if (state =='auto') {
                    return "mdi:sync";
                  }
                  return icon;
                ]]]
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: >-
                    [[[
                        var mode = 'off';
                        if (entity.state == 'off'){
                          mode = 'auto' ;
                        } else if (entity.state != 'off') {
                          mode = 'off';
                        }
                        
                        return mode;
                    ]]]
              styles:
                icon:
                  - color: >
                      [[[
                          if (entity.state == "dry"){
                            return 'rgba(var(--color, 255, 165, 0),1)';
                          } else if (entity.state == "cool"){
                            return 'rgba(var(--color-blue),1)';
                          } else if (entity.state == "heat"){
                            return 'rgba(var(--color-red),1)';
                          } else if (entity.state == "auto"){
                            return 'rgba(var(--color-green),1)';
                          } else if (entity.state == "fan_only"){
                            return 'rgba(var(--color, 195, 0, 255),1)';
                          } 
                          return 'rgba(var(--color-theme),0.2)';
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                          if (entity.state == "dry"){
                            return 'rgba(var(--color, 255, 165, 0),0.2)';
                          } else if (entity.state == "cool"){
                            return 'rgba(var(--color-blue),0.2)';
                          } else if (entity.state == "heat"){
                            return 'rgba(var(--color-red),0.2)';
                          } else if (entity.state == "auto"){
                            return 'rgba(var(--color-green),0.2)';
                          } else if (entity.state == "fan_only"){
                            return 'rgba(var(--color, 195, 0, 255),0.2)';
                          } 
                          return 'rgba(var(--color-theme),0.05)';
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: >
                [[[
                    if (variables.name == null) {
                      return entity.entity_id;
                    }
                    return variables.name;
                ]]]
              label: >-
                [[[
                    var label = variables.custom_card_heat_pump_off ;
                    if (entity.state == 'off'){
                      label = variables.custom_card_heat_pump_off ;
                    } else if (entity.state == 'dry') {
                      label = variables.custom_card_heat_pump_dry;
                    } else if (entity.state == 'heat') {
                      label = variables.custom_card_heat_pump_heat;
                    } else if (entity.state == 'auto') {
                      label = variables.custom_card_heat_pump_auto;
                    } else if (entity.state == 'cool') {
                      label = variables.custom_card_heat_pump_cool;
                    } else if (entity.state == 'fan_only') {
                      label = variables.custom_card_heat_pump_fan_only;
                    }
                    
                    return (entity.attributes.current_temperature ) + '°' + ' • ' + label;
                ]]]
              # name:
              #   - color: >-
              #       [[[
              #           var color = entity.attributes.rgb_color;
              #           if (variables.ulm_card_light_enable_color == true){
              #             if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){
              #               if (color){
              #                 return 'rgba(' + color + ',1)'
              #               } else {
              #                 return 'rgba(var(--color-yellow-text),1)'
              #               }
              #             }
              #           }
              #           return 'rgba(var(--color-yellow-text),1)'
              #       ]]]

              # state:
              #   - operator: "template"
              #     value: "[[[return entity.state == 'dry']]]"
              #     styles:
              #       icon:
              #         - color: "rgba(var(--color, 255, 165, 0),1)"
              #       img_cell:
              #         - background-color: "rgba(var(--color, 255, 165, 0),0.2)"
              #   - operator: "template"
              #     value: "[[[return entity.state == 'cool']]]"
              #     styles:
              #       icon:
              #         - color: "rgba(var(--color-blue),1)"
              #       img_cell:
              #         - background-color: "rgba(var(--color-blue),0.2)"
              #   - operator: "template"
              #     value: "[[[return entity.state == 'heat']]]"
              #     styles:
              #       icon:
              #         - color: "rgba(var(--color-red),1)"
              #       img_cell:
              #         - background-color: "rgba(var(--color-red),0.2)"
              #   - operator: "template"
              #     value: "[[[return entity.state == 'fan_only']]]"
              #     styles:
              #       icon:
              #         - color: "rgba(var(--color, 195, 0, 255),1)"
              #       img_cell:
              #         - background-color: "rgba(var(--color, 195, 0, 255),0.2)"
              #   - operator: "template"
              #     value: "[[[return entity.state == 'auto']]]"
              #     styles:
              #       icon:
              #         - color: "rgba(var(--color-green),1)"
              #       img_cell:
              #         - background-color: "rgba(var(--color-green),0.2)"
    # item1:
    #   card:
    #     type: "custom:button-card"
    #     template:
    #       - "icon_info"
    #       - "ulm_language_variables"
    #     hold_action:
    #       action: "more-info"
    #     tap_action:
    #       action: "call-service"
    #       service: "climate.set_hvac_mode"
    #       service_data:
    #         entity_id: "[[[ return entity.entity_id ]]]"
    #         hvac_mode: >-
    #           [[[
    #               var mode = 'off';
    #               if (entity.state == 'off'){
    #                 mode = 'auto' ;
    #               } else if (entity.state != 'off') {
    #                 mode = 'off';
    #               }

    #               return mode;
    #           ]]]
    #     entity: "[[[ return entity.entity_id ]]]"
    #     name: >
    #       [[[
    #           if (variables.name == null) {
    #             return entity.entity_id;
    #           }
    #           return variables.name;
    #       ]]]
    #     label: >-
    #       [[[
    #           var label = variables.ulm_off ;
    #           if (entity.state == 'off'){
    #             label = variables.ulm_off ;
    #           } else if (entity.state == 'dry') {
    #             label = variables.custom_card_heat_pump_dry;
    #           } else if (entity.state == 'heat') {
    #             label = variables.custom_card_heat_pump_heat;
    #           } else if (entity.state == 'auto') {
    #             label = variables.custom_card_heat_pump_auto;
    #           } else if (entity.state == 'cool') {
    #             label = variables.custom_card_heat_pump_cool;
    #           } else if (entity.state == 'fan_only') {
    #             label = variables.custom_card_heat_pump_fan_only;
    #           }

    #           return (entity.attributes.current_temperature ) + '°' + ' • ' + label;
    #       ]]]
    #     icon: >
    #       [[[
    #         var icon = "mdi:air-conditioner";
    #         var state = entity.state;
    #         if (state =='dry') {
    #           return "mdi:water";
    #         } else if (state =='heat') {
    #           return "mdi:fire";
    #         } else if (state =='cool') {
    #           return "mdi:snowflake";
    #         } else if (state =='fan_only') {
    #           return "mdi:fan";
    #         } else if (state =='auto') {
    #           return "mdi:sync";
    #         }
    #         return icon;
    #       ]]]
    #     state:
    #       - operator: "template"
    #         value: "[[[return entity.state == 'dry']]]"
    #         styles:
    #           icon:
    #             - color: "rgba(var(--color, 255, 165, 0),1)"
    #           img_cell:
    #             - background-color: "rgba(var(--color, 255, 165, 0),0.2)"
    #       - operator: "template"
    #         value: "[[[return entity.state == 'cool']]]"
    #         styles:
    #           icon:
    #             - color: "rgba(var(--color-blue),1)"
    #           img_cell:
    #             - background-color: "rgba(var(--color-blue),0.2)"
    #       - operator: "template"
    #         value: "[[[return entity.state == 'heat']]]"
    #         styles:
    #           icon:
    #             - color: "rgba(var(--color-red),1)"
    #           img_cell:
    #             - background-color: "rgba(var(--color-red),0.2)"
    #       - operator: "template"
    #         value: "[[[return entity.state == 'fan_only']]]"
    #         styles:
    #           icon:
    #             - color: "rgba(var(--color, 195, 0, 255),1)"
    #           img_cell:
    #             - background-color: "rgba(var(--color, 195, 0, 255),0.2)"
    #       - operator: "template"
    #         value: "[[[return entity.state == 'auto']]]"
    #         styles:
    #           icon:
    #             - color: "rgba(var(--color-green),1)"
    #           img_cell:
    #             - background-color: "rgba(var(--color-green),0.2)"
    item2:
      card:
        type: "custom:button-card"
        template: "list_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:minus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  temperature: "[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]"
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return entity.attributes.temperature + '°C' ]]]"
              styles:
                card:
                  - box-shadow: "none"
              show_icon: false
              tap_action:
                action: none
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:plus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  temperature: "[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]"
    item3:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fire"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "heat"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "heat"){
                        var color = 'rgba(var(--color-red), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "heat"){
                        var bc_color = 'rgba(var(--color-red), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:snowflake"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "cool"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "cool"){
                        var color = 'rgba(var(--color-blue), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "cool"){
                        var bc_color = 'rgba(var(--color-blue), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:sync"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "auto"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "auto"){
                        var color = 'rgba(var(--color-green), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "auto"){
                        var bc_color = 'rgba(var(--color-green), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:water"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "dry"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "dry"){
                        var color = 'rgba(var(--color, 255, 165, 0), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "dry"){
                        var bc_color = 'rgba(var(--color, 255, 165, 0), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fan"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "fan_only"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "fan_only"){
                        var color = 'rgba(var(--color, 195, 0, 255), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "fan_only"){
                        var bc_color = 'rgba(var(--color, 195, 0, 255), 0.2)';
                      }
                      return bc_color;
                    ]]]
    item4:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fan"
            size: 30%
            tap_action:
              action: "call-service"
              service: "climate.set_fan_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                fan_mode: "low"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.fan_mode == "low"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.fan_mode == "low"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fan"
            size: 40%
            tap_action:
              action: "call-service"
              service: "climate.set_fan_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                fan_mode: "medium"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.fan_mode == "medium"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.fan_mode == "medium"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fan"
            size: 50%
            tap_action:
              action: "call-service"
              service: "climate.set_fan_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                fan_mode: "high"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.fan_mode == "high"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.fan_mode == "high"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:fan-auto"
            size: 50%
            tap_action:
              action: "call-service"
              service: "climate.set_fan_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                fan_mode: "auto"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.fan_mode == "auto"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.fan_mode == "auto"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
    item5:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:arrow-down"
            tap_action:
              action: "call-service"
              service: "climate.set_swing_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                swing_mode: "vertical"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.swing_mode == "vertical"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.swing_mode == "vertical"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:arrow-right"
            tap_action:
              action: "call-service"
              service: "climate.set_swing_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                swing_mode: "horizontal"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.swing_mode == "horizontal"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.swing_mode == "horizontal"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]
          - type: "custom:button-card"
            template: "widget_icon_juve"
            icon: "mdi:redo"
            tap_action:
              action: "call-service"
              service: "climate.set_swing_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                swing_mode: "both"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.attributes.swing_mode == "both"){
                        var color = 'rgba(var(--color-grey), 1)';
                      }
                      return color;
                    ]]]
                # - transform: scaleY(-1)
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.attributes.swing_mode == "both"){
                        var bc_color = 'rgba(var(--color-grey), 0.2)';
                      }
                      return bc_color;
                    ]]]

widget_icon_juve:
  tap_action:
    action: "toggle"
  show_icon: true
  show_name: false
  show_state: true
  styles:
    grid:
      - grid-template-areas: "'i'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background-color: "rgba(var(--color-theme),0.05)"
      - border-radius: "14px"
      - place-self: "center"
      - height: "42px"
    icon:
      - color: "rgba(var(--color-theme),0.9)"
  size: "20px"
